{"version":3,"sources":["./src/app/pages/contacts/contacts.module.ts","./src/app/pages/contacts/contacts.page.scss","./src/app/pages/contacts/contacts.page.ts","./src/app/pages/contacts/contacts-routing.module.ts","./src/app/pages/contacts/contacts.page.html"],"names":[],"mappings":"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","file":"pages-contacts-contacts-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { ContactsPageRoutingModule } from './contacts-routing.module';\nimport { ContactsPage } from './contacts.page';\n\n// 1. Importa formulários do Angular \nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ContactsPageRoutingModule,\n\n    //importar ReactiveFormsModule\n    \n    ReactiveFormsModule\n  ],\n  declarations: [ContactsPage]\n})\nexport class ContactsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb250YWN0cy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { from } from 'rxjs';\n\n// 1. Importa dependências\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\nimport { AngularFirestore } from '@angular/fire/firestore';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { DatePipe } from '@angular/common';\nimport { AppService } from '../../services/app.service';\n\n// 6. Não permite somente espaços nos campos\nexport function removeSpaces(control: AbstractControl) {\n  if (control && control.value && !control.value.replace(/\\s/g, '').length) {\n    control.setValue('');\n  }\n  return null;\n}\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.page.html',\n  styleUrls: ['./contacts.page.scss'],\n})\nexport class ContactsPage implements OnInit {\n\n  // 3. Atributos\n  public contactForm: FormGroup; // Cria formulário\n  pipe = new DatePipe('en_US'); // Formatador de datas\n\n  constructor(\n\n    // 2. Injeta dependências\n    public form: FormBuilder,\n    public afs: AngularFirestore,\n    public auth: AngularFireAuth,\n    public app: AppService\n  ) { }\n\n  ngOnInit() {\n\n    // 4. Cria o formulário de contatos\n    this.contactFormCreate();\n\n    // 8.  Preenche os campos se usuário está logado\n    if (this.contactForm) {\n      this.auth.onAuthStateChanged(\n        (userData) => {\n          if(userData) {\n            this.contactForm.controls.name.setValue(userData.displayName.trim());\n            this.contactForm.controls.email.setValue(userData.email.trim());\n          }\n        }\n      );\n    }\n  }\n\n  // 5. Cria o formulário de contatos\n  contactFormCreate() {\n\n    this.contactForm = this.form.group({\n      date: [''],\n      name: [\n        '',\n        Validators.compose([\n          Validators.required, // Obrigatório\n          Validators.minLength(3), // Pelo menos 3 caracteres\n          removeSpaces\n        ])\n      ],\n      email: [\n        '',\n        Validators.compose([\n          Validators.required,\n          Validators.email,\n          removeSpaces\n        ])\n      ],\n      subject: [\n        '',\n        Validators.compose([\n          Validators.required,\n          Validators.minLength(5),\n          removeSpaces\n        ])\n      ],\n      message: [\n        '',\n        Validators.compose([\n          Validators.required,\n          Validators.minLength(5),\n          removeSpaces\n        ])\n      ]\n    });\n  }\n\n  // 7. Envia o formulário\n  contactSend() {\n\n    // Formata data\n    this.contactForm.controls.date.setValue(\n      this.pipe.transform(Date.now(), 'yyyy-MM-dd HH:mm:ss').trim()\n    );\n\n    // Salva documento no Firestore\n    this.afs.collection('contacts').add(this.contactForm.value)\n      .then(\n        () => {\n\n          // Exibe o feedback\n          this.app.myAlert(\n            'Contato Enviado',\n            'Seu contato foi enviado com sucesso!<br><br>Obrigado...',\n            () => {\n\n              // Reiniciar o formulário\n              this.contactForm.reset({\n                date: '',\n                name: this.contactForm.value.name.trim(),\n                email: this.contactForm.value.email.trim(),\n                subject: '',\n                message: ''\n              });\n            }\n          );\n        }\n      )\n      .catch(\n        (error) => { console.error(error); }\n      );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ContactsPage } from './contacts.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ContactsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ContactsPageRoutingModule {}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Faça Contato</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n\\n  <p class=\\\"ion-no-margin\\\">Preencha o formulário abaixo para entrar em contato com a equipe do\\n    <strong>Marfagafos</strong>.\\n  </p>\\n  <p class=\\\"ion-text-center\\\"><small>\\n      <ion-text color=\\\"danger\\\">Preencha todos os campos.</ion-text>\\n    </small></p>\\n\\n  <form [formGroup]=\\\"contactForm\\\" (ngSubmit)=\\\"contactSend()\\\">\\n\\n    <ion-list lines=\\\"full\\\" class=\\\"ion-no-padding\\\">\\n\\n      <ion-item>\\n        <ion-label for=\\\"name\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\n          Nome:\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"contactForm.controls.name.errors\\\">\\n\\n            <small *ngIf=\\\"contactForm.controls.name.errors.required\\\">\\n              * Obrigatório\\n            </small>\\n\\n            <small *ngIf=\\\"contactForm.controls.name.errors.minlength\\\">\\n              * Inválido\\n            </small>\\n\\n          </ion-text>\\n        </ion-label>\\n        <ion-input type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\" formControlName=\\\"name\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label for=\\\"email\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\n          E-mail:\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"contactForm.controls.email.errors\\\">\\n\\n            <small *ngIf=\\\"contactForm.controls.email.errors.required\\\">\\n              * Obrigatório\\n            </small>\\n\\n            <small *ngIf=\\\"contactForm.controls.email.errors.email\\\">\\n              * Inválido\\n            </small>\\n\\n          </ion-text>\\n        </ion-label>\\n        <ion-input type=\\\"text\\\" id=\\\"email\\\" name=\\\"email\\\" formControlName=\\\"email\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label for=\\\"subject\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\n          Assunto:\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"contactForm.controls.subject.errors\\\">\\n\\n            <small *ngIf=\\\"contactForm.controls.subject.errors.required\\\">\\n              * Obrigatório\\n            </small>\\n\\n            <small *ngIf=\\\"contactForm.controls.subject.errors.minlength\\\">\\n              * Inválido\\n            </small>\\n\\n          </ion-text>\\n        </ion-label>\\n        <ion-input type=\\\"text\\\" id=\\\"subject\\\" name=\\\"subject\\\" formControlName=\\\"subject\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label for=\\\"message\\\" position=\\\"floating\\\" color=\\\"primary\\\">\\n          Mensagem:\\n          <ion-text color=\\\"danger\\\" *ngIf=\\\"contactForm.controls.message.errors\\\">\\n\\n            <small *ngIf=\\\"contactForm.controls.message.errors.required\\\">\\n              * Obrigatório\\n            </small>\\n\\n            <small *ngIf=\\\"contactForm.controls.message.errors.minlength\\\">\\n              * Inválido\\n            </small>\\n\\n          </ion-text>\\n        </ion-label>\\n        <ion-textarea type=\\\"text\\\" id=\\\"message\\\" name=\\\"message\\\" formControlName=\\\"message\\\" autoGrow=\\\"true\\\"></ion-textarea>\\n      </ion-item>\\n\\n    </ion-list>\\n\\n    <ion-button type=\\\"submit\\\" expand=\\\"block\\\" class=\\\"ion-margin-vertical\\\" [disabled]=\\\"contactForm.invalid\\\">Enviar\\n    </ion-button>\\n\\n  </form>\\n\\n</ion-content>\";"],"sourceRoot":"webpack:///"}